import { __extends } from 'tslib';
import { Injectable, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var ElectronService = /** @class */ (function () {
    function ElectronService() {
    }
    Object.defineProperty(ElectronService.prototype, "electron", {
        get: /**
         * @return {?}
         */
        function () {
            if (!this._electron) {
                if (window && window.require) {
                    this._electron = window.require('electron');
                    return this._electron;
                }
                return null;
            }
            return this._electron;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "isElectronApp", {
        /**
         * determines if SPA is running in Electron
         */
        get: /**
         * determines if SPA is running in Electron
         * @return {?}
         */
        function () {
            return !!window.navigator.userAgent.match(/Electron/);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "isMacOS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isElectronApp && process.platform === 'darwin';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "isWindows", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isElectronApp && process.platform === 'win32';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "isLinux", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isElectronApp && process.platform === 'linux';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "isX86", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isElectronApp && process.arch === 'ia32';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "isX64", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isElectronApp && process.arch === 'x64';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "desktopCapturer", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.desktopCapturer : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "ipcRenderer", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.ipcRenderer : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "remote", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.remote : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "webFrame", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.webFrame : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "clipboard", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.clipboard : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "crashReporter", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.crashReporter : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "process", {
        get: /**
         * @return {?}
         */
        function () {
            return this.remote ? this.remote.process : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "nativeImage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.nativeImage : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "screen", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.screen : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElectronService.prototype, "shell", {
        get: /**
         * @return {?}
         */
        function () {
            return this.electron ? this.electron.shell : null;
        },
        enumerable: true,
        configurable: true
    });
    return ElectronService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var ElectronServiceRef = /** @class */ (function (_super) {
    __extends(ElectronServiceRef, _super);
    function ElectronServiceRef() {
        return _super.call(this) || this;
    }
    ElectronServiceRef.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ElectronServiceRef.ctorParameters = function () { return []; };
    return ElectronServiceRef;
}(ElectronService));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var NgxElectronModule = /** @class */ (function () {
    function NgxElectronModule() {
    }
    NgxElectronModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [],
                    exports: [],
                    providers: [{ provide: ElectronService, useClass: ElectronServiceRef }]
                },] }
    ];
    return NgxElectronModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

export { NgxElectronModule, ElectronService, ElectronServiceRef };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWVsZWN0cm9uLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9uZ3gtZWxlY3Ryb24vbGliL2VsZWN0cm9uLnNlcnZpY2UudHMiLCJuZzovL25neC1lbGVjdHJvbi9saWIvZWxlY3Ryb24uc2VydmljZS5yZWYudHMiLCJuZzovL25neC1lbGVjdHJvbi9wdWJsaWNfYXBpLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEVsZWN0cm9uIGZyb20gJ2VsZWN0cm9uJztcbmltcG9ydCB7IEVsZWN0cm9uV2luZG93IH0gZnJvbSAnLi90eXBpbmdzL2VsZWN0cm9uLndpbmRvdyc7XG5cbmRlY2xhcmUgbGV0IHdpbmRvdzogRWxlY3Ryb25XaW5kb3c7XG5cbmV4cG9ydCBjbGFzcyBFbGVjdHJvblNlcnZpY2Uge1xuICAgIHByaXZhdGUgX2VsZWN0cm9uOiBFbGVjdHJvbi5SZW5kZXJlckludGVyZmFjZTtcblxuICAgIHByaXZhdGUgZ2V0IGVsZWN0cm9uKCk6IEVsZWN0cm9uLlJlbmRlcmVySW50ZXJmYWNlIHtcbiAgICAgICAgaWYgKCF0aGlzLl9lbGVjdHJvbikge1xuICAgICAgICAgICAgaWYgKHdpbmRvdyAmJiB3aW5kb3cucmVxdWlyZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2VsZWN0cm9uID0gd2luZG93LnJlcXVpcmUoJ2VsZWN0cm9uJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2VsZWN0cm9uO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZWN0cm9uO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGRldGVybWluZXMgaWYgU1BBIGlzIHJ1bm5pbmcgaW4gRWxlY3Ryb25cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0IGlzRWxlY3Ryb25BcHAoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhIXdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9FbGVjdHJvbi8pO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaXNNYWNPUygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNFbGVjdHJvbkFwcCAmJiBwcm9jZXNzLnBsYXRmb3JtID09PSAnZGFyd2luJztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGlzV2luZG93cygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNFbGVjdHJvbkFwcCAmJiBwcm9jZXNzLnBsYXRmb3JtID09PSAnd2luMzInO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaXNMaW51eCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNFbGVjdHJvbkFwcCAmJiBwcm9jZXNzLnBsYXRmb3JtID09PSAnbGludXgnO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaXNYODYoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzRWxlY3Ryb25BcHAgJiYgcHJvY2Vzcy5hcmNoID09PSAnaWEzMic7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBpc1g2NCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNFbGVjdHJvbkFwcCAmJiBwcm9jZXNzLmFyY2ggPT09ICd4NjQnO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgZGVza3RvcENhcHR1cmVyKCk6IEVsZWN0cm9uLkRlc2t0b3BDYXB0dXJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZWN0cm9uID8gdGhpcy5lbGVjdHJvbi5kZXNrdG9wQ2FwdHVyZXIgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaXBjUmVuZGVyZXIoKTogRWxlY3Ryb24uSXBjUmVuZGVyZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVjdHJvbiA/IHRoaXMuZWxlY3Ryb24uaXBjUmVuZGVyZXIgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgcmVtb3RlKCk6IEVsZWN0cm9uLlJlbW90ZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZWN0cm9uID8gdGhpcy5lbGVjdHJvbi5yZW1vdGUgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgd2ViRnJhbWUoKTogRWxlY3Ryb24uV2ViRnJhbWUge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVjdHJvbiA/IHRoaXMuZWxlY3Ryb24ud2ViRnJhbWUgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgY2xpcGJvYXJkKCk6IEVsZWN0cm9uLkNsaXBib2FyZCB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZWN0cm9uID8gdGhpcy5lbGVjdHJvbi5jbGlwYm9hcmQgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgY3Jhc2hSZXBvcnRlcigpOiBFbGVjdHJvbi5DcmFzaFJlcG9ydGVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlY3Ryb24gPyB0aGlzLmVsZWN0cm9uLmNyYXNoUmVwb3J0ZXIgOiBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgcHJvY2VzcygpOiBhbnkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZW1vdGUgPyB0aGlzLnJlbW90ZS5wcm9jZXNzIDogbnVsbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IG5hdGl2ZUltYWdlKCk6IHR5cGVvZiBFbGVjdHJvbi5uYXRpdmVJbWFnZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZWN0cm9uID8gdGhpcy5lbGVjdHJvbi5uYXRpdmVJbWFnZSA6IG51bGw7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBzY3JlZW4oKTogRWxlY3Ryb24uU2NyZWVuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlY3Ryb24gPyB0aGlzLmVsZWN0cm9uLnNjcmVlbiA6IG51bGw7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBzaGVsbCgpOiBFbGVjdHJvbi5TaGVsbCB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZWN0cm9uID8gdGhpcy5lbGVjdHJvbi5zaGVsbCA6IG51bGw7XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgRWxlY3Ryb25TZXJ2aWNlIH0gZnJvbSAnLi9lbGVjdHJvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEVsZWN0cm9uU2VydmljZVJlZiBleHRlbmRzIEVsZWN0cm9uU2VydmljZSB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRWxlY3Ryb25TZXJ2aWNlIH0gZnJvbSAnLi9saWIvZWxlY3Ryb24uc2VydmljZSc7XG5pbXBvcnQgeyBFbGVjdHJvblNlcnZpY2VSZWYgfSBmcm9tICcuL2xpYi9lbGVjdHJvbi5zZXJ2aWNlLnJlZic7XG5cbmV4cG9ydCAqIGZyb20gJy4vbGliL2VsZWN0cm9uLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvZWxlY3Ryb24uc2VydmljZS5yZWYnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW10sXG4gICAgZXhwb3J0czogW10sXG4gICAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBFbGVjdHJvblNlcnZpY2UsIHVzZUNsYXNzOiBFbGVjdHJvblNlcnZpY2VSZWYgfV1cbn0pXG5leHBvcnQgY2xhc3MgTmd4RWxlY3Ryb25Nb2R1bGUge1xuXG59XG4iXSwibmFtZXMiOlsidHNsaWJfMS5fX2V4dGVuZHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFLQTtJQUFBO0tBZ0ZDO0lBN0VHLHNCQUFZLHFDQUFROzs7O1FBQXBCO1lBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUU7Z0JBQ2pCLElBQUksTUFBTSxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUU7b0JBQzFCLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLE9BQU8s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